//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AutoGRAPHService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RSchema", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class RSchema : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string NameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="REnumDevices", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class REnumDevices : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private AutoGRAPHService.RGroupItem[] GroupsField;
        
        private AutoGRAPHService.RDeviceItem[] ItemsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.RGroupItem[] Groups
        {
            get
            {
                return this.GroupsField;
            }
            set
            {
                this.GroupsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.RDeviceItem[] Items
        {
            get
            {
                return this.ItemsField;
            }
            set
            {
                this.ItemsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RGroupItem", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RDeviceItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RGeofenceItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RDriverItem))]
    public partial class RGroupItem : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Guid IDField;
        
        private string NameField;
        
        private System.Nullable<System.Guid> ParentIDField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ParentID
        {
            get
            {
                return this.ParentIDField;
            }
            set
            {
                this.ParentIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RDeviceItem", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class RDeviceItem : AutoGRAPHService.RGroupItem
    {
        
        private bool AllowedField;
        
        private AutoGRAPHService.RPoint FixedLocationField;
        
        private AutoGRAPHService.RProperty[] PropertiesField;
        
        private int SerialField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Allowed
        {
            get
            {
                return this.AllowedField;
            }
            set
            {
                this.AllowedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.RPoint FixedLocation
        {
            get
            {
                return this.FixedLocationField;
            }
            set
            {
                this.FixedLocationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.RProperty[] Properties
        {
            get
            {
                return this.PropertiesField;
            }
            set
            {
                this.PropertiesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Serial
        {
            get
            {
                return this.SerialField;
            }
            set
            {
                this.SerialField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RGeofenceItem", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class RGeofenceItem : AutoGRAPHService.RGroupItem
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RDriverItem", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class RDriverItem : AutoGRAPHService.RGroupItem
    {
        
        private string DriverIDField;
        
        private AutoGRAPHService.RProperty[] PropertiesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DriverID
        {
            get
            {
                return this.DriverIDField;
            }
            set
            {
                this.DriverIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.RProperty[] Properties
        {
            get
            {
                return this.PropertiesField;
            }
            set
            {
                this.PropertiesField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RPoint", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class RPoint : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double LatField;
        
        private double LngField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lat
        {
            get
            {
                return this.LatField;
            }
            set
            {
                this.LatField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lng
        {
            get
            {
                return this.LngField;
            }
            set
            {
                this.LngField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RProperty", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RSchema[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RSchema))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.REnumDevices))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RGroupItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RGroupItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RDeviceItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RDeviceItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RPoint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RProperty[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RPropType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.REnumGeofences))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RGeofenceItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RGeofenceItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.REnumDrivers))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RDriverItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RDriverItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RDeviceInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RDeviceStage[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RDeviceStage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.ROnlineInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.ROnlineState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RParameters))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RParameter[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RParameter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RParameterStatus[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RParameterStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTrips))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTrip[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTrip))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTripStage[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTripStage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTripStageItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTripStageItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RGeoFence[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RGeoFence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RGeoFenceBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTrackInfo[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTrackInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RProperties))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RouterType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RPoint[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RRouteSegment[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RRouteSegment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTripItemContainer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTripItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTripItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.ReportFormat))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.ReportStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoCardItems))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoActivityItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoActivityItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoBaseItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TR_ActivityType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoEventItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoEventItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TR_EventType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoCardItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoCardItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AGInterfaces.ReturnType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AGInterfaces.AddValueType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.ROnlineInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Guid[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RParameters>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrips>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(object[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(double[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrackInfo[]>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.DateTime[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RProperties>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RGeoFence>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTripStage>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTripItemContainer>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, byte[]>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, AutoGRAPHService.TachoCardItems>))]
    public partial class RProperty : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool InheritedField;
        
        private string NameField;
        
        private AutoGRAPHService.RPropType TypeField;
        
        private object ValueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Inherited
        {
            get
            {
                return this.InheritedField;
            }
            set
            {
                this.InheritedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.RPropType Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RPropType", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public enum RPropType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        String = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Number = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Date = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TareTable = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Time = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Memo = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Color = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bool = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Radio = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Image = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        File = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProgressBar = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Combobox = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileLink = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Device = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GeoFence = 15,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="REnumGeofences", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class REnumGeofences : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private AutoGRAPHService.RGroupItem[] GroupsField;
        
        private AutoGRAPHService.RGeofenceItem[] ItemsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.RGroupItem[] Groups
        {
            get
            {
                return this.GroupsField;
            }
            set
            {
                this.GroupsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.RGeofenceItem[] Items
        {
            get
            {
                return this.ItemsField;
            }
            set
            {
                this.ItemsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="REnumDrivers", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class REnumDrivers : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private AutoGRAPHService.RGroupItem[] GroupsField;
        
        private AutoGRAPHService.RDriverItem[] ItemsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.RGroupItem[] Groups
        {
            get
            {
                return this.GroupsField;
            }
            set
            {
                this.GroupsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.RDriverItem[] Items
        {
            get
            {
                return this.ItemsField;
            }
            set
            {
                this.ItemsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RDeviceInfo", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class RDeviceInfo : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private AutoGRAPHService.RDeviceStage[] StagesField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.RDeviceStage[] Stages
        {
            get
            {
                return this.StagesField;
            }
            set
            {
                this.StagesField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RDeviceStage", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class RDeviceStage : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CaptionField;
        
        private string ImageField;
        
        private bool IsGroupField;
        
        private string NameField;
        
        private string ParameterField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caption
        {
            get
            {
                return this.CaptionField;
            }
            set
            {
                this.CaptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image
        {
            get
            {
                return this.ImageField;
            }
            set
            {
                this.ImageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGroup
        {
            get
            {
                return this.IsGroupField;
            }
            set
            {
                this.IsGroupField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parameter
        {
            get
            {
                return this.ParameterField;
            }
            set
            {
                this.ParameterField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ROnlineInfo", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class ROnlineInfo : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string AddressField;
        
        private double CourseField;
        
        private System.DateTime DTField;
        
        private System.Collections.Generic.Dictionary<string, object> FinalField;
        
        private System.Guid IDField;
        
        private AutoGRAPHService.RPoint LastPositionField;
        
        private string NameField;
        
        private double SpeedField;
        
        private AutoGRAPHService.ROnlineState StateField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address
        {
            get
            {
                return this.AddressField;
            }
            set
            {
                this.AddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Course
        {
            get
            {
                return this.CourseField;
            }
            set
            {
                this.CourseField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DT
        {
            get
            {
                return this.DTField;
            }
            set
            {
                this.DTField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, object> Final
        {
            get
            {
                return this.FinalField;
            }
            set
            {
                this.FinalField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.RPoint LastPosition
        {
            get
            {
                return this.LastPositionField;
            }
            set
            {
                this.LastPositionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Speed
        {
            get
            {
                return this.SpeedField;
            }
            set
            {
                this.SpeedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.ROnlineState State
        {
            get
            {
                return this.StateField;
            }
            set
            {
                this.StateField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ROnlineState", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public enum ROnlineState : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Park = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Move = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Flight = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RParameters", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class RParameters : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private AutoGRAPHService.RParameter[] FinalParamsField;
        
        private System.Guid IDField;
        
        private string NameField;
        
        private AutoGRAPHService.RParameter[] OnlineParamsField;
        
        private AutoGRAPHService.RParameter[] TripsParamsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.RParameter[] FinalParams
        {
            get
            {
                return this.FinalParamsField;
            }
            set
            {
                this.FinalParamsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.RParameter[] OnlineParams
        {
            get
            {
                return this.OnlineParamsField;
            }
            set
            {
                this.OnlineParamsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.RParameter[] TripsParams
        {
            get
            {
                return this.TripsParamsField;
            }
            set
            {
                this.TripsParamsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RParameter", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class RParameter : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CaptionField;
        
        private string FormatField;
        
        private string GroupNameField;
        
        private string NameField;
        
        private AGInterfaces.ReturnType ReturnTypeField;
        
        private AutoGRAPHService.RParameterStatus[] StatusesField;
        
        private string UnitField;
        
        private AGInterfaces.AddValueType ValueTypeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caption
        {
            get
            {
                return this.CaptionField;
            }
            set
            {
                this.CaptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Format
        {
            get
            {
                return this.FormatField;
            }
            set
            {
                this.FormatField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName
        {
            get
            {
                return this.GroupNameField;
            }
            set
            {
                this.GroupNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AGInterfaces.ReturnType ReturnType
        {
            get
            {
                return this.ReturnTypeField;
            }
            set
            {
                this.ReturnTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.RParameterStatus[] Statuses
        {
            get
            {
                return this.StatusesField;
            }
            set
            {
                this.StatusesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit
        {
            get
            {
                return this.UnitField;
            }
            set
            {
                this.UnitField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AGInterfaces.AddValueType ValueType
        {
            get
            {
                return this.ValueTypeField;
            }
            set
            {
                this.ValueTypeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RParameterStatus", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class RParameterStatus : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CaptionField;
        
        private System.Guid ReferenceIDField;
        
        private int ValueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caption
        {
            get
            {
                return this.CaptionField;
            }
            set
            {
                this.CaptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ReferenceID
        {
            get
            {
                return this.ReferenceIDField;
            }
            set
            {
                this.ReferenceIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RTrips", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class RTrips : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Guid IDField;
        
        private string NameField;
        
        private System.Collections.Generic.Dictionary<string, object> TotalField;
        
        private AutoGRAPHService.RTrip[] TripsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, object> Total
        {
            get
            {
                return this.TotalField;
            }
            set
            {
                this.TotalField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.RTrip[] Trips
        {
            get
            {
                return this.TripsField;
            }
            set
            {
                this.TripsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RTrip", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class RTrip : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime EDField;
        
        private int IndexField;
        
        private AutoGRAPHService.RPoint PointEndField;
        
        private AutoGRAPHService.RPoint PointStartField;
        
        private System.DateTime SDField;
        
        private AutoGRAPHService.RTripStage[] StagesField;
        
        private System.Collections.Generic.Dictionary<string, object> TotalField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ED
        {
            get
            {
                return this.EDField;
            }
            set
            {
                this.EDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index
        {
            get
            {
                return this.IndexField;
            }
            set
            {
                this.IndexField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.RPoint PointEnd
        {
            get
            {
                return this.PointEndField;
            }
            set
            {
                this.PointEndField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.RPoint PointStart
        {
            get
            {
                return this.PointStartField;
            }
            set
            {
                this.PointStartField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SD
        {
            get
            {
                return this.SDField;
            }
            set
            {
                this.SDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.RTripStage[] Stages
        {
            get
            {
                return this.StagesField;
            }
            set
            {
                this.StagesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, object> Total
        {
            get
            {
                return this.TotalField;
            }
            set
            {
                this.TotalField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RTripStage", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class RTripStage : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string AliasField;
        
        private AutoGRAPHService.RTripStageItem[] ItemsField;
        
        private string NameField;
        
        private string[] ParamsField;
        
        private AutoGRAPHService.RParameterStatus[] StatusesField;
        
        private System.Collections.Generic.Dictionary<string, object> TotalField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Alias
        {
            get
            {
                return this.AliasField;
            }
            set
            {
                this.AliasField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.RTripStageItem[] Items
        {
            get
            {
                return this.ItemsField;
            }
            set
            {
                this.ItemsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Params
        {
            get
            {
                return this.ParamsField;
            }
            set
            {
                this.ParamsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.RParameterStatus[] Statuses
        {
            get
            {
                return this.StatusesField;
            }
            set
            {
                this.StatusesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, object> Total
        {
            get
            {
                return this.TotalField;
            }
            set
            {
                this.TotalField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RTripStageItem", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RSchema[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RSchema))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.REnumDevices))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RGroupItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RGroupItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RDeviceItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RDeviceItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RPoint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RProperty[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RProperty))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RPropType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.REnumGeofences))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RGeofenceItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RGeofenceItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.REnumDrivers))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RDriverItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RDriverItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RDeviceInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RDeviceStage[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RDeviceStage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.ROnlineInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.ROnlineState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RParameters))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RParameter[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RParameter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RParameterStatus[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RParameterStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTrips))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTrip[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTrip))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTripStage[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTripStage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTripStageItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RGeoFence[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RGeoFence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RGeoFenceBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTrackInfo[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTrackInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RProperties))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RouterType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RPoint[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RRouteSegment[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RRouteSegment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTripItemContainer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTripItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTripItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.ReportFormat))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.ReportStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoCardItems))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoActivityItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoActivityItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoBaseItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TR_ActivityType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoEventItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoEventItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TR_EventType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoCardItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoCardItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AGInterfaces.ReturnType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AGInterfaces.AddValueType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.ROnlineInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Guid[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RParameters>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrips>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(object[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(double[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrackInfo[]>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.DateTime[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RProperties>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RGeoFence>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTripStage>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTripItemContainer>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, byte[]>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, AutoGRAPHService.TachoCardItems>))]
    public partial class RTripStageItem : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CaptionField;
        
        private System.DateTime EDField;
        
        private int IndexField;
        
        private System.DateTime SDField;
        
        private int StatusField;
        
        private System.Guid StatusIDField;
        
        private System.Guid[] StatusIDsField;
        
        private object[] ValuesField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caption
        {
            get
            {
                return this.CaptionField;
            }
            set
            {
                this.CaptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ED
        {
            get
            {
                return this.EDField;
            }
            set
            {
                this.EDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index
        {
            get
            {
                return this.IndexField;
            }
            set
            {
                this.IndexField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SD
        {
            get
            {
                return this.SDField;
            }
            set
            {
                this.SDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid StatusID
        {
            get
            {
                return this.StatusIDField;
            }
            set
            {
                this.StatusIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] StatusIDs
        {
            get
            {
                return this.StatusIDsField;
            }
            set
            {
                this.StatusIDsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object[] Values
        {
            get
            {
                return this.ValuesField;
            }
            set
            {
                this.ValuesField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RGeoFence", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class RGeoFence : AutoGRAPHService.RGeoFenceBase
    {
        
        private string ImageNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageName
        {
            get
            {
                return this.ImageNameField;
            }
            set
            {
                this.ImageNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RGeoFenceBase", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RGeoFence))]
    public partial class RGeoFenceBase : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Guid IDField;
        
        private bool IsPolygonField;
        
        private double[] LatField;
        
        private double[] LngField;
        
        private string NameField;
        
        private double RField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPolygon
        {
            get
            {
                return this.IsPolygonField;
            }
            set
            {
                this.IsPolygonField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] Lat
        {
            get
            {
                return this.LatField;
            }
            set
            {
                this.LatField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] Lng
        {
            get
            {
                return this.LngField;
            }
            set
            {
                this.LngField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double R
        {
            get
            {
                return this.RField;
            }
            set
            {
                this.RField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RTrackInfo", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class RTrackInfo : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime[] DTField;
        
        private int IndexField;
        
        private double[] LatField;
        
        private double[] LngField;
        
        private double[] SpeedField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime[] DT
        {
            get
            {
                return this.DTField;
            }
            set
            {
                this.DTField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index
        {
            get
            {
                return this.IndexField;
            }
            set
            {
                this.IndexField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] Lat
        {
            get
            {
                return this.LatField;
            }
            set
            {
                this.LatField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] Lng
        {
            get
            {
                return this.LngField;
            }
            set
            {
                this.LngField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] Speed
        {
            get
            {
                return this.SpeedField;
            }
            set
            {
                this.SpeedField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RProperties", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class RProperties : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Guid IDField;
        
        private string NameField;
        
        private System.Collections.Generic.Dictionary<string, object> PropertiesField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, object> Properties
        {
            get
            {
                return this.PropertiesField;
            }
            set
            {
                this.PropertiesField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RouterType", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public enum RouterType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Google = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Progorod = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RRouteSegment", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class RRouteSegment : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double DistanceField;
        
        private AutoGRAPHService.RPoint[] PointsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Distance
        {
            get
            {
                return this.DistanceField;
            }
            set
            {
                this.DistanceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.RPoint[] Points
        {
            get
            {
                return this.PointsField;
            }
            set
            {
                this.PointsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RTripItemContainer", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class RTripItemContainer : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Guid IDField;
        
        private AutoGRAPHService.RTripItem[] ItemsField;
        
        private string NameField;
        
        private string[] ParamsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.RTripItem[] Items
        {
            get
            {
                return this.ItemsField;
            }
            set
            {
                this.ItemsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Params
        {
            get
            {
                return this.ParamsField;
            }
            set
            {
                this.ParamsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RTripItem", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RSchema[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RSchema))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.REnumDevices))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RGroupItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RGroupItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RDeviceItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RDeviceItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RPoint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RProperty[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RProperty))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RPropType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.REnumGeofences))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RGeofenceItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RGeofenceItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.REnumDrivers))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RDriverItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RDriverItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RDeviceInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RDeviceStage[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RDeviceStage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.ROnlineInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.ROnlineState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RParameters))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RParameter[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RParameter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RParameterStatus[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RParameterStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTrips))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTrip[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTrip))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTripStage[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTripStage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTripStageItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTripStageItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RGeoFence[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RGeoFence))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RGeoFenceBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTrackInfo[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTrackInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RProperties))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RouterType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RPoint[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RRouteSegment[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RRouteSegment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTripItemContainer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.RTripItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.ReportFormat))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.ReportStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoCardItems))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoActivityItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoActivityItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoBaseItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TR_ActivityType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoEventItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoEventItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TR_EventType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoCardItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoCardItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AGInterfaces.ReturnType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AGInterfaces.AddValueType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.ROnlineInfo>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Guid[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RParameters>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrips>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(object[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(double[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrackInfo[]>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.DateTime[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RProperties>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RGeoFence>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTripStage>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTripItemContainer>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, byte[]>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, AutoGRAPHService.TachoCardItems>))]
    public partial class RTripItem : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CaptionField;
        
        private System.DateTime DTField;
        
        private System.TimeSpan DurationField;
        
        private string StageField;
        
        private int StatusField;
        
        private System.Guid StatusIDField;
        
        private int TripIndexField;
        
        private object[] ValuesField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caption
        {
            get
            {
                return this.CaptionField;
            }
            set
            {
                this.CaptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DT
        {
            get
            {
                return this.DTField;
            }
            set
            {
                this.DTField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Duration
        {
            get
            {
                return this.DurationField;
            }
            set
            {
                this.DurationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Stage
        {
            get
            {
                return this.StageField;
            }
            set
            {
                this.StageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid StatusID
        {
            get
            {
                return this.StatusIDField;
            }
            set
            {
                this.StatusIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TripIndex
        {
            get
            {
                return this.TripIndexField;
            }
            set
            {
                this.TripIndexField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object[] Values
        {
            get
            {
                return this.ValuesField;
            }
            set
            {
                this.ValuesField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportFormat", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public enum ReportFormat : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDF = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Excel2007 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Word2007 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RTF = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XPS = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ODS = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ODT = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportStatus", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public enum ReportStatus : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFound = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InProgress = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ready = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TachoCardItems", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class TachoCardItems : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private AutoGRAPHService.TachoActivityItem[] ActivitiesField;
        
        private AutoGRAPHService.TachoEventItem[] EventsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.TachoActivityItem[] Activities
        {
            get
            {
                return this.ActivitiesField;
            }
            set
            {
                this.ActivitiesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.TachoEventItem[] Events
        {
            get
            {
                return this.EventsField;
            }
            set
            {
                this.EventsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TachoActivityItem", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class TachoActivityItem : AutoGRAPHService.TachoBaseItem
    {
        
        private System.TimeSpan DurationField;
        
        private bool IsCrewField;
        
        private int OdometerEndField;
        
        private AutoGRAPHService.TR_ActivityType StateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Duration
        {
            get
            {
                return this.DurationField;
            }
            set
            {
                this.DurationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCrew
        {
            get
            {
                return this.IsCrewField;
            }
            set
            {
                this.IsCrewField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OdometerEnd
        {
            get
            {
                return this.OdometerEndField;
            }
            set
            {
                this.OdometerEndField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.TR_ActivityType State
        {
            get
            {
                return this.StateField;
            }
            set
            {
                this.StateField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TachoBaseItem", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoEventItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AutoGRAPHService.TachoActivityItem))]
    public partial class TachoBaseItem : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime DTField;
        
        private int OdometerField;
        
        private string VehicleField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DT
        {
            get
            {
                return this.DTField;
            }
            set
            {
                this.DTField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Odometer
        {
            get
            {
                return this.OdometerField;
            }
            set
            {
                this.OdometerField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vehicle
        {
            get
            {
                return this.VehicleField;
            }
            set
            {
                this.VehicleField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TR_ActivityType", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public enum TR_ActivityType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BreakRest = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Available = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Work = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Driving = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TachoEventItem", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class TachoEventItem : AutoGRAPHService.TachoBaseItem
    {
        
        private AutoGRAPHService.TR_EventType EventField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AutoGRAPHService.TR_EventType Event
        {
            get
            {
                return this.EventField;
            }
            set
            {
                this.EventField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TR_EventType", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public enum TR_EventType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardInserted = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardRemoved = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManualBegin = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManualEnd = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoBegin = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoEnd = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonValidCard = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardConflict = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeOverlap = 300,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrivingWithoutCard = 400,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CardInsertWhileDriving = 500,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SessionNotClosed = 600,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverSpeeding = 700,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PowerInterrupted = 800,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MotionDataError = 900,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TachoCardItem", Namespace="http://schemas.datacontract.org/2004/07/AutoGRAPHService")]
    public partial class TachoCardItem : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime CreatedField;
        
        private string DriverNameField;
        
        private string IDField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created
        {
            get
            {
                return this.CreatedField;
            }
            set
            {
                this.CreatedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DriverName
        {
            get
            {
                return this.DriverNameField;
            }
            set
            {
                this.DriverNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
    }
}
namespace AGInterfaces
{
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReturnType", Namespace="http://schemas.datacontract.org/2004/07/AGInterfaces")]
    public enum ReturnType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Boolean = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Byte = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Int32 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Int64 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Double = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DateTime = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeSpan = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Guid = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Guid4 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        String = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Image = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Coordinates = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Location = 12,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddValueType", Namespace="http://schemas.datacontract.org/2004/07/AGInterfaces")]
    public enum AddValueType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Curr = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        First = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Last = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Diff = 3,
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IAutoGRAPHSvc")]
public interface IAutoGRAPHSvc
{
    

    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/Login", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/LoginResponse")]
    string Login(string UserName, string Password);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/Login", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/LoginResponse")]
    System.IAsyncResult BeginLogin(string UserName, string Password, System.AsyncCallback callback, object asyncState);
    
    string EndLogin(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/EnumSchemas", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/EnumSchemasResponse")]
    AutoGRAPHService.RSchema[] EnumSchemas();
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/EnumSchemas", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/EnumSchemasResponse")]
    System.IAsyncResult BeginEnumSchemas(System.AsyncCallback callback, object asyncState);
    
    AutoGRAPHService.RSchema[] EndEnumSchemas(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/EnumDevices", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/EnumDevicesResponse")]
    AutoGRAPHService.REnumDevices EnumDevices(string schemaName);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/EnumDevices", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/EnumDevicesResponse")]
    System.IAsyncResult BeginEnumDevices(string schemaName, System.AsyncCallback callback, object asyncState);
    
    AutoGRAPHService.REnumDevices EndEnumDevices(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/EnumGeoFences", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/EnumGeoFencesResponse")]
    AutoGRAPHService.REnumGeofences EnumGeoFences(string schemaName);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/EnumGeoFences", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/EnumGeoFencesResponse")]
    System.IAsyncResult BeginEnumGeoFences(string schemaName, System.AsyncCallback callback, object asyncState);
    
    AutoGRAPHService.REnumGeofences EndEnumGeoFences(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/EnumDrivers", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/EnumDriversResponse")]
    AutoGRAPHService.REnumDrivers EnumDrivers(string schemaName);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/EnumDrivers", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/EnumDriversResponse")]
    System.IAsyncResult BeginEnumDrivers(string schemaName, System.AsyncCallback callback, object asyncState);
    
    AutoGRAPHService.REnumDrivers EndEnumDrivers(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/GetDevicesInfo", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetDevicesInfoResponse")]
    AutoGRAPHService.RDeviceInfo GetDevicesInfo(string schemaName);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/GetDevicesInfo", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetDevicesInfoResponse")]
    System.IAsyncResult BeginGetDevicesInfo(string schemaName, System.AsyncCallback callback, object asyncState);
    
    AutoGRAPHService.RDeviceInfo EndGetDevicesInfo(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/GetOnlineInfoAll", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetOnlineInfoAllResponse")]
    System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.ROnlineInfo> GetOnlineInfoAll(string schemaName);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/GetOnlineInfoAll", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetOnlineInfoAllResponse")]
    System.IAsyncResult BeginGetOnlineInfoAll(string schemaName, System.AsyncCallback callback, object asyncState);
    
    System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.ROnlineInfo> EndGetOnlineInfoAll(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/EnumReports", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/EnumReportsResponse")]
    string[] EnumReports();
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/EnumReports", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/EnumReportsResponse")]
    System.IAsyncResult BeginEnumReports(System.AsyncCallback callback, object asyncState);
    
    string[] EndEnumReports(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/EnumParameters", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/EnumParametersResponse")]
    System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RParameters> EnumParameters(string schemaName, System.Guid[] deviceIDs);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/EnumParameters", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/EnumParametersResponse")]
    System.IAsyncResult BeginEnumParameters(string schemaName, System.Guid[] deviceIDs, System.AsyncCallback callback, object asyncState);
    
    System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RParameters> EndEnumParameters(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/GetTrips", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetTripsResponse")]
    System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrips> GetTrips(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/GetTrips", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetTripsResponse")]
    System.IAsyncResult BeginGetTrips(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED, System.AsyncCallback callback, object asyncState);
    
    System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrips> EndGetTrips(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/GetTripsCustom", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetTripsCustomResponse")]
    System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrips> GetTripsCustom(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED, AutoGRAPHService.RGeoFence[] geofences);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/GetTripsCustom", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetTripsCustomResponse")]
    System.IAsyncResult BeginGetTripsCustom(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED, AutoGRAPHService.RGeoFence[] geofences, System.AsyncCallback callback, object asyncState);
    
    System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrips> EndGetTripsCustom(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/GetOnlineInfo", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetOnlineInfoResponse")]
    System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.ROnlineInfo> GetOnlineInfo(string schemaName, System.Guid[] deviceIDs);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/GetOnlineInfo", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetOnlineInfoResponse")]
    System.IAsyncResult BeginGetOnlineInfo(string schemaName, System.Guid[] deviceIDs, System.AsyncCallback callback, object asyncState);
    
    System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.ROnlineInfo> EndGetOnlineInfo(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/GetTrack", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetTrackResponse")]
    System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrackInfo[]> GetTrack(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/GetTrack", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetTrackResponse")]
    System.IAsyncResult BeginGetTrack(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED, System.AsyncCallback callback, object asyncState);
    
    System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrackInfo[]> EndGetTrack(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/GetProperties", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetPropertiesResponse")]
    System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RProperties> GetProperties(string schemaName, System.Guid[] deviceIDs);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/GetProperties", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetPropertiesResponse")]
    System.IAsyncResult BeginGetProperties(string schemaName, System.Guid[] deviceIDs, System.AsyncCallback callback, object asyncState);
    
    System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RProperties> EndGetProperties(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/GetProperty", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetPropertyResponse")]
    System.Collections.Generic.Dictionary<System.Guid, object> GetProperty(string schemaName, System.Guid[] deviceIDs, string propertyName);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/GetProperty", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetPropertyResponse")]
    System.IAsyncResult BeginGetProperty(string schemaName, System.Guid[] deviceIDs, string propertyName, System.AsyncCallback callback, object asyncState);
    
    System.Collections.Generic.Dictionary<System.Guid, object> EndGetProperty(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/GetRoute", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetRouteResponse")]
    AutoGRAPHService.RRouteSegment[] GetRoute(AutoGRAPHService.RouterType router, AutoGRAPHService.RPoint[] waypoints);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/GetRoute", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetRouteResponse")]
    System.IAsyncResult BeginGetRoute(AutoGRAPHService.RouterType router, AutoGRAPHService.RPoint[] waypoints, System.AsyncCallback callback, object asyncState);
    
    AutoGRAPHService.RRouteSegment[] EndGetRoute(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/GetGeofences", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetGeofencesResponse")]
    System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RGeoFence> GetGeofences(string schemaName, System.Guid[] IDs);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/GetGeofences", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetGeofencesResponse")]
    System.IAsyncResult BeginGetGeofences(string schemaName, System.Guid[] IDs, System.AsyncCallback callback, object asyncState);
    
    System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RGeoFence> EndGetGeofences(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/GetStage", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetStageResponse")]
    System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTripStage> GetStage(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED, string stageName);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/GetStage", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetStageResponse")]
    System.IAsyncResult BeginGetStage(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED, string stageName, System.AsyncCallback callback, object asyncState);
    
    System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTripStage> EndGetStage(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/GetTripItems", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetTripItemsResponse")]
    System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTripItemContainer> GetTripItems(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/GetTripItems", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetTripItemsResponse")]
    System.IAsyncResult BeginGetTripItems(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED, System.AsyncCallback callback, object asyncState);
    
    System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTripItemContainer> EndGetTripItems(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/WaitData", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/WaitDataResponse")]
    System.Guid[] WaitData(string schemaName, System.Guid[] devices, System.TimeSpan timeout, System.TimeSpan waitAfterFirstChange);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/WaitData", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/WaitDataResponse")]
    System.IAsyncResult BeginWaitData(string schemaName, System.Guid[] devices, System.TimeSpan timeout, System.TimeSpan waitAfterFirstChange, System.AsyncCallback callback, object asyncState);
    
    System.Guid[] EndWaitData(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/GetReports", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetReportsResponse")]
    System.Collections.Generic.Dictionary<string, byte[]> GetReports(string schemaName, string[] reportNames, System.Guid[] devices, System.DateTime SD, System.DateTime ED, bool splitToTrips, AutoGRAPHService.ReportFormat format, bool compress, bool combine);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/GetReports", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetReportsResponse")]
    System.IAsyncResult BeginGetReports(string schemaName, string[] reportNames, System.Guid[] devices, System.DateTime SD, System.DateTime ED, bool splitToTrips, AutoGRAPHService.ReportFormat format, bool compress, bool combine, System.AsyncCallback callback, object asyncState);
    
    System.Collections.Generic.Dictionary<string, byte[]> EndGetReports(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/ExecuteReports", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/ExecuteReportsResponse")]
    System.Guid ExecuteReports(string schemaName, string[] reportNames, System.Guid[] devices, System.DateTime SD, System.DateTime ED, bool splitToTrips, AutoGRAPHService.ReportFormat format, bool compress, bool combine);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/ExecuteReports", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/ExecuteReportsResponse")]
    System.IAsyncResult BeginExecuteReports(string schemaName, string[] reportNames, System.Guid[] devices, System.DateTime SD, System.DateTime ED, bool splitToTrips, AutoGRAPHService.ReportFormat format, bool compress, bool combine, System.AsyncCallback callback, object asyncState);
    
    System.Guid EndExecuteReports(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/GetReportsStatus", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetReportsStatusResponse")]
    AutoGRAPHService.ReportStatus GetReportsStatus(System.Guid statusToken);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/GetReportsStatus", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetReportsStatusResponse")]
    System.IAsyncResult BeginGetReportsStatus(System.Guid statusToken, System.AsyncCallback callback, object asyncState);
    
    AutoGRAPHService.ReportStatus EndGetReportsStatus(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/GetReportsResult", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetReportsResultResponse")]
    System.Collections.Generic.Dictionary<string, byte[]> GetReportsResult(System.Guid statusToken);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/GetReportsResult", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetReportsResultResponse")]
    System.IAsyncResult BeginGetReportsResult(System.Guid statusToken, System.AsyncCallback callback, object asyncState);
    
    System.Collections.Generic.Dictionary<string, byte[]> EndGetReportsResult(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/CancelReports", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/CancelReportsResponse")]
    void CancelReports(System.Guid statusToken);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/CancelReports", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/CancelReportsResponse")]
    System.IAsyncResult BeginCancelReports(System.Guid statusToken, System.AsyncCallback callback, object asyncState);
    
    void EndCancelReports(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/GetCardRecords", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetCardRecordsResponse")]
    System.Collections.Generic.Dictionary<string, AutoGRAPHService.TachoCardItems> GetCardRecords(System.DateTime SD, System.DateTime ED, string[] cardID);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/GetCardRecords", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetCardRecordsResponse")]
    System.IAsyncResult BeginGetCardRecords(System.DateTime SD, System.DateTime ED, string[] cardID, System.AsyncCallback callback, object asyncState);
    
    System.Collections.Generic.Dictionary<string, AutoGRAPHService.TachoCardItems> EndGetCardRecords(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/GetCardStatistic", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetCardStatisticResponse")]
    AutoGRAPHService.TachoCardItem[] GetCardStatistic(string[] cardIDs);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/GetCardStatistic", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetCardStatisticResponse")]
    System.IAsyncResult BeginGetCardStatistic(string[] cardIDs, System.AsyncCallback callback, object asyncState);
    
    AutoGRAPHService.TachoCardItem[] EndGetCardStatistic(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutoGRAPHSvc/GetCardStatisticAll", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetCardStatisticAllResponse")]
    AutoGRAPHService.TachoCardItem[] GetCardStatisticAll();
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAutoGRAPHSvc/GetCardStatisticAll", ReplyAction="http://tempuri.org/IAutoGRAPHSvc/GetCardStatisticAllResponse")]
    System.IAsyncResult BeginGetCardStatisticAll(System.AsyncCallback callback, object asyncState);
    
    AutoGRAPHService.TachoCardItem[] EndGetCardStatisticAll(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IAutoGRAPHSvcChannel : IAutoGRAPHSvc, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}



[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class EnumSchemasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public EnumSchemasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public AutoGRAPHService.RSchema[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((AutoGRAPHService.RSchema[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class EnumDevicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public EnumDevicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public AutoGRAPHService.REnumDevices Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((AutoGRAPHService.REnumDevices)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class EnumGeoFencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public EnumGeoFencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public AutoGRAPHService.REnumGeofences Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((AutoGRAPHService.REnumGeofences)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class EnumDriversCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public EnumDriversCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public AutoGRAPHService.REnumDrivers Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((AutoGRAPHService.REnumDrivers)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetDevicesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetDevicesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public AutoGRAPHService.RDeviceInfo Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((AutoGRAPHService.RDeviceInfo)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetOnlineInfoAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetOnlineInfoAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.ROnlineInfo> Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.ROnlineInfo>)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class EnumReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public EnumReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public string[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class EnumParametersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public EnumParametersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RParameters> Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RParameters>)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetTripsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetTripsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrips> Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrips>)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetTripsCustomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetTripsCustomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrips> Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrips>)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetOnlineInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetOnlineInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.ROnlineInfo> Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.ROnlineInfo>)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetTrackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetTrackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrackInfo[]> Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrackInfo[]>)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RProperties> Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RProperties>)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetPropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetPropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public System.Collections.Generic.Dictionary<System.Guid, object> Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((System.Collections.Generic.Dictionary<System.Guid, object>)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetRouteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetRouteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public AutoGRAPHService.RRouteSegment[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((AutoGRAPHService.RRouteSegment[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetGeofencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetGeofencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RGeoFence> Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RGeoFence>)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetStageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetStageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTripStage> Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTripStage>)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetTripItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetTripItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTripItemContainer> Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTripItemContainer>)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class WaitDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public WaitDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public System.Guid[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((System.Guid[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public System.Collections.Generic.Dictionary<string, byte[]> Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((System.Collections.Generic.Dictionary<string, byte[]>)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ExecuteReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public ExecuteReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public System.Guid Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((System.Guid)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetReportsStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetReportsStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public AutoGRAPHService.ReportStatus Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((AutoGRAPHService.ReportStatus)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetReportsResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetReportsResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public System.Collections.Generic.Dictionary<string, byte[]> Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((System.Collections.Generic.Dictionary<string, byte[]>)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetCardRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetCardRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public System.Collections.Generic.Dictionary<string, AutoGRAPHService.TachoCardItems> Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((System.Collections.Generic.Dictionary<string, AutoGRAPHService.TachoCardItems>)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetCardStatisticCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetCardStatisticCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public AutoGRAPHService.TachoCardItem[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((AutoGRAPHService.TachoCardItem[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class GetCardStatisticAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetCardStatisticAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public AutoGRAPHService.TachoCardItem[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((AutoGRAPHService.TachoCardItem[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class AutoGRAPHSvcClient : System.ServiceModel.ClientBase<IAutoGRAPHSvc>, IAutoGRAPHSvc
{
    
    private BeginOperationDelegate onBeginLoginDelegate;
    
    private EndOperationDelegate onEndLoginDelegate;
    
    private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
    
    private BeginOperationDelegate onBeginEnumSchemasDelegate;
    
    private EndOperationDelegate onEndEnumSchemasDelegate;
    
    private System.Threading.SendOrPostCallback onEnumSchemasCompletedDelegate;
    
    private BeginOperationDelegate onBeginEnumDevicesDelegate;
    
    private EndOperationDelegate onEndEnumDevicesDelegate;
    
    private System.Threading.SendOrPostCallback onEnumDevicesCompletedDelegate;
    
    private BeginOperationDelegate onBeginEnumGeoFencesDelegate;
    
    private EndOperationDelegate onEndEnumGeoFencesDelegate;
    
    private System.Threading.SendOrPostCallback onEnumGeoFencesCompletedDelegate;
    
    private BeginOperationDelegate onBeginEnumDriversDelegate;
    
    private EndOperationDelegate onEndEnumDriversDelegate;
    
    private System.Threading.SendOrPostCallback onEnumDriversCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetDevicesInfoDelegate;
    
    private EndOperationDelegate onEndGetDevicesInfoDelegate;
    
    private System.Threading.SendOrPostCallback onGetDevicesInfoCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetOnlineInfoAllDelegate;
    
    private EndOperationDelegate onEndGetOnlineInfoAllDelegate;
    
    private System.Threading.SendOrPostCallback onGetOnlineInfoAllCompletedDelegate;
    
    private BeginOperationDelegate onBeginEnumReportsDelegate;
    
    private EndOperationDelegate onEndEnumReportsDelegate;
    
    private System.Threading.SendOrPostCallback onEnumReportsCompletedDelegate;
    
    private BeginOperationDelegate onBeginEnumParametersDelegate;
    
    private EndOperationDelegate onEndEnumParametersDelegate;
    
    private System.Threading.SendOrPostCallback onEnumParametersCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetTripsDelegate;
    
    private EndOperationDelegate onEndGetTripsDelegate;
    
    private System.Threading.SendOrPostCallback onGetTripsCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetTripsCustomDelegate;
    
    private EndOperationDelegate onEndGetTripsCustomDelegate;
    
    private System.Threading.SendOrPostCallback onGetTripsCustomCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetOnlineInfoDelegate;
    
    private EndOperationDelegate onEndGetOnlineInfoDelegate;
    
    private System.Threading.SendOrPostCallback onGetOnlineInfoCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetTrackDelegate;
    
    private EndOperationDelegate onEndGetTrackDelegate;
    
    private System.Threading.SendOrPostCallback onGetTrackCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetPropertiesDelegate;
    
    private EndOperationDelegate onEndGetPropertiesDelegate;
    
    private System.Threading.SendOrPostCallback onGetPropertiesCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetPropertyDelegate;
    
    private EndOperationDelegate onEndGetPropertyDelegate;
    
    private System.Threading.SendOrPostCallback onGetPropertyCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetRouteDelegate;
    
    private EndOperationDelegate onEndGetRouteDelegate;
    
    private System.Threading.SendOrPostCallback onGetRouteCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetGeofencesDelegate;
    
    private EndOperationDelegate onEndGetGeofencesDelegate;
    
    private System.Threading.SendOrPostCallback onGetGeofencesCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetStageDelegate;
    
    private EndOperationDelegate onEndGetStageDelegate;
    
    private System.Threading.SendOrPostCallback onGetStageCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetTripItemsDelegate;
    
    private EndOperationDelegate onEndGetTripItemsDelegate;
    
    private System.Threading.SendOrPostCallback onGetTripItemsCompletedDelegate;
    
    private BeginOperationDelegate onBeginWaitDataDelegate;
    
    private EndOperationDelegate onEndWaitDataDelegate;
    
    private System.Threading.SendOrPostCallback onWaitDataCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetReportsDelegate;
    
    private EndOperationDelegate onEndGetReportsDelegate;
    
    private System.Threading.SendOrPostCallback onGetReportsCompletedDelegate;
    
    private BeginOperationDelegate onBeginExecuteReportsDelegate;
    
    private EndOperationDelegate onEndExecuteReportsDelegate;
    
    private System.Threading.SendOrPostCallback onExecuteReportsCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetReportsStatusDelegate;
    
    private EndOperationDelegate onEndGetReportsStatusDelegate;
    
    private System.Threading.SendOrPostCallback onGetReportsStatusCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetReportsResultDelegate;
    
    private EndOperationDelegate onEndGetReportsResultDelegate;
    
    private System.Threading.SendOrPostCallback onGetReportsResultCompletedDelegate;
    
    private BeginOperationDelegate onBeginCancelReportsDelegate;
    
    private EndOperationDelegate onEndCancelReportsDelegate;
    
    private System.Threading.SendOrPostCallback onCancelReportsCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetCardRecordsDelegate;
    
    private EndOperationDelegate onEndGetCardRecordsDelegate;
    
    private System.Threading.SendOrPostCallback onGetCardRecordsCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetCardStatisticDelegate;
    
    private EndOperationDelegate onEndGetCardStatisticDelegate;
    
    private System.Threading.SendOrPostCallback onGetCardStatisticCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetCardStatisticAllDelegate;
    
    private EndOperationDelegate onEndGetCardStatisticAllDelegate;
    
    private System.Threading.SendOrPostCallback onGetCardStatisticAllCompletedDelegate;
    
    public AutoGRAPHSvcClient()
    {
    }
    
    public AutoGRAPHSvcClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public AutoGRAPHSvcClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public AutoGRAPHSvcClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public AutoGRAPHSvcClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }


    
    public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
    
    public event System.EventHandler<EnumSchemasCompletedEventArgs> EnumSchemasCompleted;
    
    public event System.EventHandler<EnumDevicesCompletedEventArgs> EnumDevicesCompleted;
    
    public event System.EventHandler<EnumGeoFencesCompletedEventArgs> EnumGeoFencesCompleted;
    
    public event System.EventHandler<EnumDriversCompletedEventArgs> EnumDriversCompleted;
    
    public event System.EventHandler<GetDevicesInfoCompletedEventArgs> GetDevicesInfoCompleted;
    
    public event System.EventHandler<GetOnlineInfoAllCompletedEventArgs> GetOnlineInfoAllCompleted;
    
    public event System.EventHandler<EnumReportsCompletedEventArgs> EnumReportsCompleted;
    
    public event System.EventHandler<EnumParametersCompletedEventArgs> EnumParametersCompleted;
    
    public event System.EventHandler<GetTripsCompletedEventArgs> GetTripsCompleted;
    
    public event System.EventHandler<GetTripsCustomCompletedEventArgs> GetTripsCustomCompleted;
    
    public event System.EventHandler<GetOnlineInfoCompletedEventArgs> GetOnlineInfoCompleted;
    
    public event System.EventHandler<GetTrackCompletedEventArgs> GetTrackCompleted;
    
    public event System.EventHandler<GetPropertiesCompletedEventArgs> GetPropertiesCompleted;
    
    public event System.EventHandler<GetPropertyCompletedEventArgs> GetPropertyCompleted;
    
    public event System.EventHandler<GetRouteCompletedEventArgs> GetRouteCompleted;
    
    public event System.EventHandler<GetGeofencesCompletedEventArgs> GetGeofencesCompleted;
    
    public event System.EventHandler<GetStageCompletedEventArgs> GetStageCompleted;
    
    public event System.EventHandler<GetTripItemsCompletedEventArgs> GetTripItemsCompleted;
    
    public event System.EventHandler<WaitDataCompletedEventArgs> WaitDataCompleted;
    
    public event System.EventHandler<GetReportsCompletedEventArgs> GetReportsCompleted;
    
    public event System.EventHandler<ExecuteReportsCompletedEventArgs> ExecuteReportsCompleted;
    
    public event System.EventHandler<GetReportsStatusCompletedEventArgs> GetReportsStatusCompleted;
    
    public event System.EventHandler<GetReportsResultCompletedEventArgs> GetReportsResultCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CancelReportsCompleted;
    
    public event System.EventHandler<GetCardRecordsCompletedEventArgs> GetCardRecordsCompleted;
    
    public event System.EventHandler<GetCardStatisticCompletedEventArgs> GetCardStatisticCompleted;
    
    public event System.EventHandler<GetCardStatisticAllCompletedEventArgs> GetCardStatisticAllCompleted;
    
    public string Login(string UserName, string Password)
    {
        return base.Channel.Login(UserName, Password);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginLogin(string UserName, string Password, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginLogin(UserName, Password, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public string EndLogin(System.IAsyncResult result)
    {
        return base.Channel.EndLogin(result);
    }
    
    private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string UserName = ((string)(inValues[0]));
        string Password = ((string)(inValues[1]));
        return this.BeginLogin(UserName, Password, callback, asyncState);
    }
    
    private object[] OnEndLogin(System.IAsyncResult result)
    {
        string retVal = this.EndLogin(result);
        return new object[] {
                retVal};
    }
    
    private void OnLoginCompleted(object state)
    {
        if ((this.LoginCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void LoginAsync(string UserName, string Password)
    {
        this.LoginAsync(UserName, Password, null);
    }
    
    public void LoginAsync(string UserName, string Password, object userState)
    {
        if ((this.onBeginLoginDelegate == null))
        {
            this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
        }
        if ((this.onEndLoginDelegate == null))
        {
            this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
        }
        if ((this.onLoginCompletedDelegate == null))
        {
            this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
        }
        base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                    UserName,
                    Password}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
    }
    
    public AutoGRAPHService.RSchema[] EnumSchemas()
    {
        return base.Channel.EnumSchemas();
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginEnumSchemas(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginEnumSchemas(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public AutoGRAPHService.RSchema[] EndEnumSchemas(System.IAsyncResult result)
    {
        return base.Channel.EndEnumSchemas(result);
    }
    
    private System.IAsyncResult OnBeginEnumSchemas(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginEnumSchemas(callback, asyncState);
    }
    
    private object[] OnEndEnumSchemas(System.IAsyncResult result)
    {
        AutoGRAPHService.RSchema[] retVal = this.EndEnumSchemas(result);
        return new object[] {
                retVal};
    }
    
    private void OnEnumSchemasCompleted(object state)
    {
        if ((this.EnumSchemasCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.EnumSchemasCompleted(this, new EnumSchemasCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void EnumSchemasAsync()
    {
        this.EnumSchemasAsync(null);
    }
    
    public void EnumSchemasAsync(object userState)
    {
        if ((this.onBeginEnumSchemasDelegate == null))
        {
            this.onBeginEnumSchemasDelegate = new BeginOperationDelegate(this.OnBeginEnumSchemas);
        }
        if ((this.onEndEnumSchemasDelegate == null))
        {
            this.onEndEnumSchemasDelegate = new EndOperationDelegate(this.OnEndEnumSchemas);
        }
        if ((this.onEnumSchemasCompletedDelegate == null))
        {
            this.onEnumSchemasCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnumSchemasCompleted);
        }
        base.InvokeAsync(this.onBeginEnumSchemasDelegate, null, this.onEndEnumSchemasDelegate, this.onEnumSchemasCompletedDelegate, userState);
    }
    
    public AutoGRAPHService.REnumDevices EnumDevices(string schemaName)
    {
        return base.Channel.EnumDevices(schemaName);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginEnumDevices(string schemaName, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginEnumDevices(schemaName, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public AutoGRAPHService.REnumDevices EndEnumDevices(System.IAsyncResult result)
    {
        return base.Channel.EndEnumDevices(result);
    }
    
    private System.IAsyncResult OnBeginEnumDevices(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string schemaName = ((string)(inValues[0]));
        return this.BeginEnumDevices(schemaName, callback, asyncState);
    }
    
    private object[] OnEndEnumDevices(System.IAsyncResult result)
    {
        AutoGRAPHService.REnumDevices retVal = this.EndEnumDevices(result);
        return new object[] {
                retVal};
    }
    
    private void OnEnumDevicesCompleted(object state)
    {
        if ((this.EnumDevicesCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.EnumDevicesCompleted(this, new EnumDevicesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void EnumDevicesAsync(string schemaName)
    {
        this.EnumDevicesAsync(schemaName, null);
    }
    
    public void EnumDevicesAsync(string schemaName, object userState)
    {
        if ((this.onBeginEnumDevicesDelegate == null))
        {
            this.onBeginEnumDevicesDelegate = new BeginOperationDelegate(this.OnBeginEnumDevices);
        }
        if ((this.onEndEnumDevicesDelegate == null))
        {
            this.onEndEnumDevicesDelegate = new EndOperationDelegate(this.OnEndEnumDevices);
        }
        if ((this.onEnumDevicesCompletedDelegate == null))
        {
            this.onEnumDevicesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnumDevicesCompleted);
        }
        base.InvokeAsync(this.onBeginEnumDevicesDelegate, new object[] {
                    schemaName}, this.onEndEnumDevicesDelegate, this.onEnumDevicesCompletedDelegate, userState);
    }
    
    public AutoGRAPHService.REnumGeofences EnumGeoFences(string schemaName)
    {
        return base.Channel.EnumGeoFences(schemaName);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginEnumGeoFences(string schemaName, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginEnumGeoFences(schemaName, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public AutoGRAPHService.REnumGeofences EndEnumGeoFences(System.IAsyncResult result)
    {
        return base.Channel.EndEnumGeoFences(result);
    }
    
    private System.IAsyncResult OnBeginEnumGeoFences(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string schemaName = ((string)(inValues[0]));
        return this.BeginEnumGeoFences(schemaName, callback, asyncState);
    }
    
    private object[] OnEndEnumGeoFences(System.IAsyncResult result)
    {
        AutoGRAPHService.REnumGeofences retVal = this.EndEnumGeoFences(result);
        return new object[] {
                retVal};
    }
    
    private void OnEnumGeoFencesCompleted(object state)
    {
        if ((this.EnumGeoFencesCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.EnumGeoFencesCompleted(this, new EnumGeoFencesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void EnumGeoFencesAsync(string schemaName)
    {
        this.EnumGeoFencesAsync(schemaName, null);
    }
    
    public void EnumGeoFencesAsync(string schemaName, object userState)
    {
        if ((this.onBeginEnumGeoFencesDelegate == null))
        {
            this.onBeginEnumGeoFencesDelegate = new BeginOperationDelegate(this.OnBeginEnumGeoFences);
        }
        if ((this.onEndEnumGeoFencesDelegate == null))
        {
            this.onEndEnumGeoFencesDelegate = new EndOperationDelegate(this.OnEndEnumGeoFences);
        }
        if ((this.onEnumGeoFencesCompletedDelegate == null))
        {
            this.onEnumGeoFencesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnumGeoFencesCompleted);
        }
        base.InvokeAsync(this.onBeginEnumGeoFencesDelegate, new object[] {
                    schemaName}, this.onEndEnumGeoFencesDelegate, this.onEnumGeoFencesCompletedDelegate, userState);
    }
    
    public AutoGRAPHService.REnumDrivers EnumDrivers(string schemaName)
    {
        return base.Channel.EnumDrivers(schemaName);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginEnumDrivers(string schemaName, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginEnumDrivers(schemaName, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public AutoGRAPHService.REnumDrivers EndEnumDrivers(System.IAsyncResult result)
    {
        return base.Channel.EndEnumDrivers(result);
    }
    
    private System.IAsyncResult OnBeginEnumDrivers(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string schemaName = ((string)(inValues[0]));
        return this.BeginEnumDrivers(schemaName, callback, asyncState);
    }
    
    private object[] OnEndEnumDrivers(System.IAsyncResult result)
    {
        AutoGRAPHService.REnumDrivers retVal = this.EndEnumDrivers(result);
        return new object[] {
                retVal};
    }
    
    private void OnEnumDriversCompleted(object state)
    {
        if ((this.EnumDriversCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.EnumDriversCompleted(this, new EnumDriversCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void EnumDriversAsync(string schemaName)
    {
        this.EnumDriversAsync(schemaName, null);
    }
    
    public void EnumDriversAsync(string schemaName, object userState)
    {
        if ((this.onBeginEnumDriversDelegate == null))
        {
            this.onBeginEnumDriversDelegate = new BeginOperationDelegate(this.OnBeginEnumDrivers);
        }
        if ((this.onEndEnumDriversDelegate == null))
        {
            this.onEndEnumDriversDelegate = new EndOperationDelegate(this.OnEndEnumDrivers);
        }
        if ((this.onEnumDriversCompletedDelegate == null))
        {
            this.onEnumDriversCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnumDriversCompleted);
        }
        base.InvokeAsync(this.onBeginEnumDriversDelegate, new object[] {
                    schemaName}, this.onEndEnumDriversDelegate, this.onEnumDriversCompletedDelegate, userState);
    }
    
    public AutoGRAPHService.RDeviceInfo GetDevicesInfo(string schemaName)
    {
        return base.Channel.GetDevicesInfo(schemaName);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetDevicesInfo(string schemaName, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetDevicesInfo(schemaName, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public AutoGRAPHService.RDeviceInfo EndGetDevicesInfo(System.IAsyncResult result)
    {
        return base.Channel.EndGetDevicesInfo(result);
    }
    
    private System.IAsyncResult OnBeginGetDevicesInfo(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string schemaName = ((string)(inValues[0]));
        return this.BeginGetDevicesInfo(schemaName, callback, asyncState);
    }
    
    private object[] OnEndGetDevicesInfo(System.IAsyncResult result)
    {
        AutoGRAPHService.RDeviceInfo retVal = this.EndGetDevicesInfo(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetDevicesInfoCompleted(object state)
    {
        if ((this.GetDevicesInfoCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetDevicesInfoCompleted(this, new GetDevicesInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetDevicesInfoAsync(string schemaName)
    {
        this.GetDevicesInfoAsync(schemaName, null);
    }
    
    public void GetDevicesInfoAsync(string schemaName, object userState)
    {
        if ((this.onBeginGetDevicesInfoDelegate == null))
        {
            this.onBeginGetDevicesInfoDelegate = new BeginOperationDelegate(this.OnBeginGetDevicesInfo);
        }
        if ((this.onEndGetDevicesInfoDelegate == null))
        {
            this.onEndGetDevicesInfoDelegate = new EndOperationDelegate(this.OnEndGetDevicesInfo);
        }
        if ((this.onGetDevicesInfoCompletedDelegate == null))
        {
            this.onGetDevicesInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDevicesInfoCompleted);
        }
        base.InvokeAsync(this.onBeginGetDevicesInfoDelegate, new object[] {
                    schemaName}, this.onEndGetDevicesInfoDelegate, this.onGetDevicesInfoCompletedDelegate, userState);
    }
    
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.ROnlineInfo> GetOnlineInfoAll(string schemaName)
    {
        return base.Channel.GetOnlineInfoAll(schemaName);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetOnlineInfoAll(string schemaName, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetOnlineInfoAll(schemaName, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.ROnlineInfo> EndGetOnlineInfoAll(System.IAsyncResult result)
    {
        return base.Channel.EndGetOnlineInfoAll(result);
    }
    
    private System.IAsyncResult OnBeginGetOnlineInfoAll(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string schemaName = ((string)(inValues[0]));
        return this.BeginGetOnlineInfoAll(schemaName, callback, asyncState);
    }
    
    private object[] OnEndGetOnlineInfoAll(System.IAsyncResult result)
    {
        System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.ROnlineInfo> retVal = this.EndGetOnlineInfoAll(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetOnlineInfoAllCompleted(object state)
    {
        if ((this.GetOnlineInfoAllCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetOnlineInfoAllCompleted(this, new GetOnlineInfoAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetOnlineInfoAllAsync(string schemaName)
    {
        this.GetOnlineInfoAllAsync(schemaName, null);
    }
    
    public void GetOnlineInfoAllAsync(string schemaName, object userState)
    {
        if ((this.onBeginGetOnlineInfoAllDelegate == null))
        {
            this.onBeginGetOnlineInfoAllDelegate = new BeginOperationDelegate(this.OnBeginGetOnlineInfoAll);
        }
        if ((this.onEndGetOnlineInfoAllDelegate == null))
        {
            this.onEndGetOnlineInfoAllDelegate = new EndOperationDelegate(this.OnEndGetOnlineInfoAll);
        }
        if ((this.onGetOnlineInfoAllCompletedDelegate == null))
        {
            this.onGetOnlineInfoAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOnlineInfoAllCompleted);
        }
        base.InvokeAsync(this.onBeginGetOnlineInfoAllDelegate, new object[] {
                    schemaName}, this.onEndGetOnlineInfoAllDelegate, this.onGetOnlineInfoAllCompletedDelegate, userState);
    }
    
    public string[] EnumReports()
    {
        return base.Channel.EnumReports();
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginEnumReports(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginEnumReports(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public string[] EndEnumReports(System.IAsyncResult result)
    {
        return base.Channel.EndEnumReports(result);
    }
    
    private System.IAsyncResult OnBeginEnumReports(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginEnumReports(callback, asyncState);
    }
    
    private object[] OnEndEnumReports(System.IAsyncResult result)
    {
        string[] retVal = this.EndEnumReports(result);
        return new object[] {
                retVal};
    }
    
    private void OnEnumReportsCompleted(object state)
    {
        if ((this.EnumReportsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.EnumReportsCompleted(this, new EnumReportsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void EnumReportsAsync()
    {
        this.EnumReportsAsync(null);
    }
    
    public void EnumReportsAsync(object userState)
    {
        if ((this.onBeginEnumReportsDelegate == null))
        {
            this.onBeginEnumReportsDelegate = new BeginOperationDelegate(this.OnBeginEnumReports);
        }
        if ((this.onEndEnumReportsDelegate == null))
        {
            this.onEndEnumReportsDelegate = new EndOperationDelegate(this.OnEndEnumReports);
        }
        if ((this.onEnumReportsCompletedDelegate == null))
        {
            this.onEnumReportsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnumReportsCompleted);
        }
        base.InvokeAsync(this.onBeginEnumReportsDelegate, null, this.onEndEnumReportsDelegate, this.onEnumReportsCompletedDelegate, userState);
    }
    
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RParameters> EnumParameters(string schemaName, System.Guid[] deviceIDs)
    {
        return base.Channel.EnumParameters(schemaName, deviceIDs);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginEnumParameters(string schemaName, System.Guid[] deviceIDs, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginEnumParameters(schemaName, deviceIDs, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RParameters> EndEnumParameters(System.IAsyncResult result)
    {
        return base.Channel.EndEnumParameters(result);
    }
    
    private System.IAsyncResult OnBeginEnumParameters(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string schemaName = ((string)(inValues[0]));
        System.Guid[] deviceIDs = ((System.Guid[])(inValues[1]));
        return this.BeginEnumParameters(schemaName, deviceIDs, callback, asyncState);
    }
    
    private object[] OnEndEnumParameters(System.IAsyncResult result)
    {
        System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RParameters> retVal = this.EndEnumParameters(result);
        return new object[] {
                retVal};
    }
    
    private void OnEnumParametersCompleted(object state)
    {
        if ((this.EnumParametersCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.EnumParametersCompleted(this, new EnumParametersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void EnumParametersAsync(string schemaName, System.Guid[] deviceIDs)
    {
        this.EnumParametersAsync(schemaName, deviceIDs, null);
    }
    
    public void EnumParametersAsync(string schemaName, System.Guid[] deviceIDs, object userState)
    {
        if ((this.onBeginEnumParametersDelegate == null))
        {
            this.onBeginEnumParametersDelegate = new BeginOperationDelegate(this.OnBeginEnumParameters);
        }
        if ((this.onEndEnumParametersDelegate == null))
        {
            this.onEndEnumParametersDelegate = new EndOperationDelegate(this.OnEndEnumParameters);
        }
        if ((this.onEnumParametersCompletedDelegate == null))
        {
            this.onEnumParametersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnumParametersCompleted);
        }
        base.InvokeAsync(this.onBeginEnumParametersDelegate, new object[] {
                    schemaName,
                    deviceIDs}, this.onEndEnumParametersDelegate, this.onEnumParametersCompletedDelegate, userState);
    }
    
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrips> GetTrips(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED)
    {
        return base.Channel.GetTrips(schemaName, deviceIDs, SD, ED);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetTrips(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetTrips(schemaName, deviceIDs, SD, ED, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrips> EndGetTrips(System.IAsyncResult result)
    {
        return base.Channel.EndGetTrips(result);
    }
    
    private System.IAsyncResult OnBeginGetTrips(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string schemaName = ((string)(inValues[0]));
        System.Guid[] deviceIDs = ((System.Guid[])(inValues[1]));
        System.DateTime SD = ((System.DateTime)(inValues[2]));
        System.DateTime ED = ((System.DateTime)(inValues[3]));
        return this.BeginGetTrips(schemaName, deviceIDs, SD, ED, callback, asyncState);
    }
    
    private object[] OnEndGetTrips(System.IAsyncResult result)
    {
        System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrips> retVal = this.EndGetTrips(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetTripsCompleted(object state)
    {
        if ((this.GetTripsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetTripsCompleted(this, new GetTripsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetTripsAsync(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED)
    {
        this.GetTripsAsync(schemaName, deviceIDs, SD, ED, null);
    }
    
    public void GetTripsAsync(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED, object userState)
    {
        if ((this.onBeginGetTripsDelegate == null))
        {
            this.onBeginGetTripsDelegate = new BeginOperationDelegate(this.OnBeginGetTrips);
        }
        if ((this.onEndGetTripsDelegate == null))
        {
            this.onEndGetTripsDelegate = new EndOperationDelegate(this.OnEndGetTrips);
        }
        if ((this.onGetTripsCompletedDelegate == null))
        {
            this.onGetTripsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTripsCompleted);
        }
        base.InvokeAsync(this.onBeginGetTripsDelegate, new object[] {
                    schemaName,
                    deviceIDs,
                    SD,
                    ED}, this.onEndGetTripsDelegate, this.onGetTripsCompletedDelegate, userState);
    }
    
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrips> GetTripsCustom(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED, AutoGRAPHService.RGeoFence[] geofences)
    {
        return base.Channel.GetTripsCustom(schemaName, deviceIDs, SD, ED, geofences);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetTripsCustom(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED, AutoGRAPHService.RGeoFence[] geofences, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetTripsCustom(schemaName, deviceIDs, SD, ED, geofences, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrips> EndGetTripsCustom(System.IAsyncResult result)
    {
        return base.Channel.EndGetTripsCustom(result);
    }
    
    private System.IAsyncResult OnBeginGetTripsCustom(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string schemaName = ((string)(inValues[0]));
        System.Guid[] deviceIDs = ((System.Guid[])(inValues[1]));
        System.DateTime SD = ((System.DateTime)(inValues[2]));
        System.DateTime ED = ((System.DateTime)(inValues[3]));
        AutoGRAPHService.RGeoFence[] geofences = ((AutoGRAPHService.RGeoFence[])(inValues[4]));
        return this.BeginGetTripsCustom(schemaName, deviceIDs, SD, ED, geofences, callback, asyncState);
    }
    
    private object[] OnEndGetTripsCustom(System.IAsyncResult result)
    {
        System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrips> retVal = this.EndGetTripsCustom(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetTripsCustomCompleted(object state)
    {
        if ((this.GetTripsCustomCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetTripsCustomCompleted(this, new GetTripsCustomCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetTripsCustomAsync(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED, AutoGRAPHService.RGeoFence[] geofences)
    {
        this.GetTripsCustomAsync(schemaName, deviceIDs, SD, ED, geofences, null);
    }
    
    public void GetTripsCustomAsync(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED, AutoGRAPHService.RGeoFence[] geofences, object userState)
    {
        if ((this.onBeginGetTripsCustomDelegate == null))
        {
            this.onBeginGetTripsCustomDelegate = new BeginOperationDelegate(this.OnBeginGetTripsCustom);
        }
        if ((this.onEndGetTripsCustomDelegate == null))
        {
            this.onEndGetTripsCustomDelegate = new EndOperationDelegate(this.OnEndGetTripsCustom);
        }
        if ((this.onGetTripsCustomCompletedDelegate == null))
        {
            this.onGetTripsCustomCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTripsCustomCompleted);
        }
        base.InvokeAsync(this.onBeginGetTripsCustomDelegate, new object[] {
                    schemaName,
                    deviceIDs,
                    SD,
                    ED,
                    geofences}, this.onEndGetTripsCustomDelegate, this.onGetTripsCustomCompletedDelegate, userState);
    }
    
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.ROnlineInfo> GetOnlineInfo(string schemaName, System.Guid[] deviceIDs)
    {
        return base.Channel.GetOnlineInfo(schemaName, deviceIDs);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetOnlineInfo(string schemaName, System.Guid[] deviceIDs, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetOnlineInfo(schemaName, deviceIDs, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.ROnlineInfo> EndGetOnlineInfo(System.IAsyncResult result)
    {
        return base.Channel.EndGetOnlineInfo(result);
    }
    
    private System.IAsyncResult OnBeginGetOnlineInfo(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string schemaName = ((string)(inValues[0]));
        System.Guid[] deviceIDs = ((System.Guid[])(inValues[1]));
        return this.BeginGetOnlineInfo(schemaName, deviceIDs, callback, asyncState);
    }
    
    private object[] OnEndGetOnlineInfo(System.IAsyncResult result)
    {
        System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.ROnlineInfo> retVal = this.EndGetOnlineInfo(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetOnlineInfoCompleted(object state)
    {
        if ((this.GetOnlineInfoCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetOnlineInfoCompleted(this, new GetOnlineInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetOnlineInfoAsync(string schemaName, System.Guid[] deviceIDs)
    {
        this.GetOnlineInfoAsync(schemaName, deviceIDs, null);
    }
    
    public void GetOnlineInfoAsync(string schemaName, System.Guid[] deviceIDs, object userState)
    {
        if ((this.onBeginGetOnlineInfoDelegate == null))
        {
            this.onBeginGetOnlineInfoDelegate = new BeginOperationDelegate(this.OnBeginGetOnlineInfo);
        }
        if ((this.onEndGetOnlineInfoDelegate == null))
        {
            this.onEndGetOnlineInfoDelegate = new EndOperationDelegate(this.OnEndGetOnlineInfo);
        }
        if ((this.onGetOnlineInfoCompletedDelegate == null))
        {
            this.onGetOnlineInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOnlineInfoCompleted);
        }
        base.InvokeAsync(this.onBeginGetOnlineInfoDelegate, new object[] {
                    schemaName,
                    deviceIDs}, this.onEndGetOnlineInfoDelegate, this.onGetOnlineInfoCompletedDelegate, userState);
    }
    
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrackInfo[]> GetTrack(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED)
    {
        return base.Channel.GetTrack(schemaName, deviceIDs, SD, ED);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetTrack(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetTrack(schemaName, deviceIDs, SD, ED, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrackInfo[]> EndGetTrack(System.IAsyncResult result)
    {
        return base.Channel.EndGetTrack(result);
    }
    
    private System.IAsyncResult OnBeginGetTrack(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string schemaName = ((string)(inValues[0]));
        System.Guid[] deviceIDs = ((System.Guid[])(inValues[1]));
        System.DateTime SD = ((System.DateTime)(inValues[2]));
        System.DateTime ED = ((System.DateTime)(inValues[3]));
        return this.BeginGetTrack(schemaName, deviceIDs, SD, ED, callback, asyncState);
    }
    
    private object[] OnEndGetTrack(System.IAsyncResult result)
    {
        System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTrackInfo[]> retVal = this.EndGetTrack(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetTrackCompleted(object state)
    {
        if ((this.GetTrackCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetTrackCompleted(this, new GetTrackCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetTrackAsync(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED)
    {
        this.GetTrackAsync(schemaName, deviceIDs, SD, ED, null);
    }
    
    public void GetTrackAsync(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED, object userState)
    {
        if ((this.onBeginGetTrackDelegate == null))
        {
            this.onBeginGetTrackDelegate = new BeginOperationDelegate(this.OnBeginGetTrack);
        }
        if ((this.onEndGetTrackDelegate == null))
        {
            this.onEndGetTrackDelegate = new EndOperationDelegate(this.OnEndGetTrack);
        }
        if ((this.onGetTrackCompletedDelegate == null))
        {
            this.onGetTrackCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTrackCompleted);
        }
        base.InvokeAsync(this.onBeginGetTrackDelegate, new object[] {
                    schemaName,
                    deviceIDs,
                    SD,
                    ED}, this.onEndGetTrackDelegate, this.onGetTrackCompletedDelegate, userState);
    }
    
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RProperties> GetProperties(string schemaName, System.Guid[] deviceIDs)
    {
        return base.Channel.GetProperties(schemaName, deviceIDs);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetProperties(string schemaName, System.Guid[] deviceIDs, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetProperties(schemaName, deviceIDs, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RProperties> EndGetProperties(System.IAsyncResult result)
    {
        return base.Channel.EndGetProperties(result);
    }
    
    private System.IAsyncResult OnBeginGetProperties(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string schemaName = ((string)(inValues[0]));
        System.Guid[] deviceIDs = ((System.Guid[])(inValues[1]));
        return this.BeginGetProperties(schemaName, deviceIDs, callback, asyncState);
    }
    
    private object[] OnEndGetProperties(System.IAsyncResult result)
    {
        System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RProperties> retVal = this.EndGetProperties(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetPropertiesCompleted(object state)
    {
        if ((this.GetPropertiesCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetPropertiesCompleted(this, new GetPropertiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetPropertiesAsync(string schemaName, System.Guid[] deviceIDs)
    {
        this.GetPropertiesAsync(schemaName, deviceIDs, null);
    }
    
    public void GetPropertiesAsync(string schemaName, System.Guid[] deviceIDs, object userState)
    {
        if ((this.onBeginGetPropertiesDelegate == null))
        {
            this.onBeginGetPropertiesDelegate = new BeginOperationDelegate(this.OnBeginGetProperties);
        }
        if ((this.onEndGetPropertiesDelegate == null))
        {
            this.onEndGetPropertiesDelegate = new EndOperationDelegate(this.OnEndGetProperties);
        }
        if ((this.onGetPropertiesCompletedDelegate == null))
        {
            this.onGetPropertiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPropertiesCompleted);
        }
        base.InvokeAsync(this.onBeginGetPropertiesDelegate, new object[] {
                    schemaName,
                    deviceIDs}, this.onEndGetPropertiesDelegate, this.onGetPropertiesCompletedDelegate, userState);
    }
    
    public System.Collections.Generic.Dictionary<System.Guid, object> GetProperty(string schemaName, System.Guid[] deviceIDs, string propertyName)
    {
        return base.Channel.GetProperty(schemaName, deviceIDs, propertyName);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetProperty(string schemaName, System.Guid[] deviceIDs, string propertyName, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetProperty(schemaName, deviceIDs, propertyName, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.Collections.Generic.Dictionary<System.Guid, object> EndGetProperty(System.IAsyncResult result)
    {
        return base.Channel.EndGetProperty(result);
    }
    
    private System.IAsyncResult OnBeginGetProperty(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string schemaName = ((string)(inValues[0]));
        System.Guid[] deviceIDs = ((System.Guid[])(inValues[1]));
        string propertyName = ((string)(inValues[2]));
        return this.BeginGetProperty(schemaName, deviceIDs, propertyName, callback, asyncState);
    }
    
    private object[] OnEndGetProperty(System.IAsyncResult result)
    {
        System.Collections.Generic.Dictionary<System.Guid, object> retVal = this.EndGetProperty(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetPropertyCompleted(object state)
    {
        if ((this.GetPropertyCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetPropertyCompleted(this, new GetPropertyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetPropertyAsync(string schemaName, System.Guid[] deviceIDs, string propertyName)
    {
        this.GetPropertyAsync(schemaName, deviceIDs, propertyName, null);
    }
    
    public void GetPropertyAsync(string schemaName, System.Guid[] deviceIDs, string propertyName, object userState)
    {
        if ((this.onBeginGetPropertyDelegate == null))
        {
            this.onBeginGetPropertyDelegate = new BeginOperationDelegate(this.OnBeginGetProperty);
        }
        if ((this.onEndGetPropertyDelegate == null))
        {
            this.onEndGetPropertyDelegate = new EndOperationDelegate(this.OnEndGetProperty);
        }
        if ((this.onGetPropertyCompletedDelegate == null))
        {
            this.onGetPropertyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPropertyCompleted);
        }
        base.InvokeAsync(this.onBeginGetPropertyDelegate, new object[] {
                    schemaName,
                    deviceIDs,
                    propertyName}, this.onEndGetPropertyDelegate, this.onGetPropertyCompletedDelegate, userState);
    }
    
    public AutoGRAPHService.RRouteSegment[] GetRoute(AutoGRAPHService.RouterType router, AutoGRAPHService.RPoint[] waypoints)
    {
        return base.Channel.GetRoute(router, waypoints);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetRoute(AutoGRAPHService.RouterType router, AutoGRAPHService.RPoint[] waypoints, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetRoute(router, waypoints, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public AutoGRAPHService.RRouteSegment[] EndGetRoute(System.IAsyncResult result)
    {
        return base.Channel.EndGetRoute(result);
    }
    
    private System.IAsyncResult OnBeginGetRoute(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        AutoGRAPHService.RouterType router = ((AutoGRAPHService.RouterType)(inValues[0]));
        AutoGRAPHService.RPoint[] waypoints = ((AutoGRAPHService.RPoint[])(inValues[1]));
        return this.BeginGetRoute(router, waypoints, callback, asyncState);
    }
    
    private object[] OnEndGetRoute(System.IAsyncResult result)
    {
        AutoGRAPHService.RRouteSegment[] retVal = this.EndGetRoute(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetRouteCompleted(object state)
    {
        if ((this.GetRouteCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetRouteCompleted(this, new GetRouteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetRouteAsync(AutoGRAPHService.RouterType router, AutoGRAPHService.RPoint[] waypoints)
    {
        this.GetRouteAsync(router, waypoints, null);
    }
    
    public void GetRouteAsync(AutoGRAPHService.RouterType router, AutoGRAPHService.RPoint[] waypoints, object userState)
    {
        if ((this.onBeginGetRouteDelegate == null))
        {
            this.onBeginGetRouteDelegate = new BeginOperationDelegate(this.OnBeginGetRoute);
        }
        if ((this.onEndGetRouteDelegate == null))
        {
            this.onEndGetRouteDelegate = new EndOperationDelegate(this.OnEndGetRoute);
        }
        if ((this.onGetRouteCompletedDelegate == null))
        {
            this.onGetRouteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRouteCompleted);
        }
        base.InvokeAsync(this.onBeginGetRouteDelegate, new object[] {
                    router,
                    waypoints}, this.onEndGetRouteDelegate, this.onGetRouteCompletedDelegate, userState);
    }
    
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RGeoFence> GetGeofences(string schemaName, System.Guid[] IDs)
    {
        return base.Channel.GetGeofences(schemaName, IDs);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetGeofences(string schemaName, System.Guid[] IDs, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetGeofences(schemaName, IDs, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RGeoFence> EndGetGeofences(System.IAsyncResult result)
    {
        return base.Channel.EndGetGeofences(result);
    }
    
    private System.IAsyncResult OnBeginGetGeofences(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string schemaName = ((string)(inValues[0]));
        System.Guid[] IDs = ((System.Guid[])(inValues[1]));
        return this.BeginGetGeofences(schemaName, IDs, callback, asyncState);
    }
    
    private object[] OnEndGetGeofences(System.IAsyncResult result)
    {
        System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RGeoFence> retVal = this.EndGetGeofences(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetGeofencesCompleted(object state)
    {
        if ((this.GetGeofencesCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetGeofencesCompleted(this, new GetGeofencesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetGeofencesAsync(string schemaName, System.Guid[] IDs)
    {
        this.GetGeofencesAsync(schemaName, IDs, null);
    }
    
    public void GetGeofencesAsync(string schemaName, System.Guid[] IDs, object userState)
    {
        if ((this.onBeginGetGeofencesDelegate == null))
        {
            this.onBeginGetGeofencesDelegate = new BeginOperationDelegate(this.OnBeginGetGeofences);
        }
        if ((this.onEndGetGeofencesDelegate == null))
        {
            this.onEndGetGeofencesDelegate = new EndOperationDelegate(this.OnEndGetGeofences);
        }
        if ((this.onGetGeofencesCompletedDelegate == null))
        {
            this.onGetGeofencesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGeofencesCompleted);
        }
        base.InvokeAsync(this.onBeginGetGeofencesDelegate, new object[] {
                    schemaName,
                    IDs}, this.onEndGetGeofencesDelegate, this.onGetGeofencesCompletedDelegate, userState);
    }
    
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTripStage> GetStage(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED, string stageName)
    {
        return base.Channel.GetStage(schemaName, deviceIDs, SD, ED, stageName);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetStage(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED, string stageName, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetStage(schemaName, deviceIDs, SD, ED, stageName, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTripStage> EndGetStage(System.IAsyncResult result)
    {
        return base.Channel.EndGetStage(result);
    }
    
    private System.IAsyncResult OnBeginGetStage(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string schemaName = ((string)(inValues[0]));
        System.Guid[] deviceIDs = ((System.Guid[])(inValues[1]));
        System.DateTime SD = ((System.DateTime)(inValues[2]));
        System.DateTime ED = ((System.DateTime)(inValues[3]));
        string stageName = ((string)(inValues[4]));
        return this.BeginGetStage(schemaName, deviceIDs, SD, ED, stageName, callback, asyncState);
    }
    
    private object[] OnEndGetStage(System.IAsyncResult result)
    {
        System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTripStage> retVal = this.EndGetStage(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetStageCompleted(object state)
    {
        if ((this.GetStageCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetStageCompleted(this, new GetStageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetStageAsync(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED, string stageName)
    {
        this.GetStageAsync(schemaName, deviceIDs, SD, ED, stageName, null);
    }
    
    public void GetStageAsync(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED, string stageName, object userState)
    {
        if ((this.onBeginGetStageDelegate == null))
        {
            this.onBeginGetStageDelegate = new BeginOperationDelegate(this.OnBeginGetStage);
        }
        if ((this.onEndGetStageDelegate == null))
        {
            this.onEndGetStageDelegate = new EndOperationDelegate(this.OnEndGetStage);
        }
        if ((this.onGetStageCompletedDelegate == null))
        {
            this.onGetStageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStageCompleted);
        }
        base.InvokeAsync(this.onBeginGetStageDelegate, new object[] {
                    schemaName,
                    deviceIDs,
                    SD,
                    ED,
                    stageName}, this.onEndGetStageDelegate, this.onGetStageCompletedDelegate, userState);
    }
    
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTripItemContainer> GetTripItems(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED)
    {
        return base.Channel.GetTripItems(schemaName, deviceIDs, SD, ED);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetTripItems(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetTripItems(schemaName, deviceIDs, SD, ED, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTripItemContainer> EndGetTripItems(System.IAsyncResult result)
    {
        return base.Channel.EndGetTripItems(result);
    }
    
    private System.IAsyncResult OnBeginGetTripItems(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string schemaName = ((string)(inValues[0]));
        System.Guid[] deviceIDs = ((System.Guid[])(inValues[1]));
        System.DateTime SD = ((System.DateTime)(inValues[2]));
        System.DateTime ED = ((System.DateTime)(inValues[3]));
        return this.BeginGetTripItems(schemaName, deviceIDs, SD, ED, callback, asyncState);
    }
    
    private object[] OnEndGetTripItems(System.IAsyncResult result)
    {
        System.Collections.Generic.Dictionary<System.Guid, AutoGRAPHService.RTripItemContainer> retVal = this.EndGetTripItems(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetTripItemsCompleted(object state)
    {
        if ((this.GetTripItemsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetTripItemsCompleted(this, new GetTripItemsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetTripItemsAsync(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED)
    {
        this.GetTripItemsAsync(schemaName, deviceIDs, SD, ED, null);
    }
    
    public void GetTripItemsAsync(string schemaName, System.Guid[] deviceIDs, System.DateTime SD, System.DateTime ED, object userState)
    {
        if ((this.onBeginGetTripItemsDelegate == null))
        {
            this.onBeginGetTripItemsDelegate = new BeginOperationDelegate(this.OnBeginGetTripItems);
        }
        if ((this.onEndGetTripItemsDelegate == null))
        {
            this.onEndGetTripItemsDelegate = new EndOperationDelegate(this.OnEndGetTripItems);
        }
        if ((this.onGetTripItemsCompletedDelegate == null))
        {
            this.onGetTripItemsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTripItemsCompleted);
        }
        base.InvokeAsync(this.onBeginGetTripItemsDelegate, new object[] {
                    schemaName,
                    deviceIDs,
                    SD,
                    ED}, this.onEndGetTripItemsDelegate, this.onGetTripItemsCompletedDelegate, userState);
    }
    
    public System.Guid[] WaitData(string schemaName, System.Guid[] devices, System.TimeSpan timeout, System.TimeSpan waitAfterFirstChange)
    {
        return base.Channel.WaitData(schemaName, devices, timeout, waitAfterFirstChange);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginWaitData(string schemaName, System.Guid[] devices, System.TimeSpan timeout, System.TimeSpan waitAfterFirstChange, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginWaitData(schemaName, devices, timeout, waitAfterFirstChange, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.Guid[] EndWaitData(System.IAsyncResult result)
    {
        return base.Channel.EndWaitData(result);
    }
    
    private System.IAsyncResult OnBeginWaitData(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string schemaName = ((string)(inValues[0]));
        System.Guid[] devices = ((System.Guid[])(inValues[1]));
        System.TimeSpan timeout = ((System.TimeSpan)(inValues[2]));
        System.TimeSpan waitAfterFirstChange = ((System.TimeSpan)(inValues[3]));
        return this.BeginWaitData(schemaName, devices, timeout, waitAfterFirstChange, callback, asyncState);
    }
    
    private object[] OnEndWaitData(System.IAsyncResult result)
    {
        System.Guid[] retVal = this.EndWaitData(result);
        return new object[] {
                retVal};
    }
    
    private void OnWaitDataCompleted(object state)
    {
        if ((this.WaitDataCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.WaitDataCompleted(this, new WaitDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void WaitDataAsync(string schemaName, System.Guid[] devices, System.TimeSpan timeout, System.TimeSpan waitAfterFirstChange)
    {
        this.WaitDataAsync(schemaName, devices, timeout, waitAfterFirstChange, null);
    }
    
    public void WaitDataAsync(string schemaName, System.Guid[] devices, System.TimeSpan timeout, System.TimeSpan waitAfterFirstChange, object userState)
    {
        if ((this.onBeginWaitDataDelegate == null))
        {
            this.onBeginWaitDataDelegate = new BeginOperationDelegate(this.OnBeginWaitData);
        }
        if ((this.onEndWaitDataDelegate == null))
        {
            this.onEndWaitDataDelegate = new EndOperationDelegate(this.OnEndWaitData);
        }
        if ((this.onWaitDataCompletedDelegate == null))
        {
            this.onWaitDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWaitDataCompleted);
        }
        base.InvokeAsync(this.onBeginWaitDataDelegate, new object[] {
                    schemaName,
                    devices,
                    timeout,
                    waitAfterFirstChange}, this.onEndWaitDataDelegate, this.onWaitDataCompletedDelegate, userState);
    }
    
    public System.Collections.Generic.Dictionary<string, byte[]> GetReports(string schemaName, string[] reportNames, System.Guid[] devices, System.DateTime SD, System.DateTime ED, bool splitToTrips, AutoGRAPHService.ReportFormat format, bool compress, bool combine)
    {
        return base.Channel.GetReports(schemaName, reportNames, devices, SD, ED, splitToTrips, format, compress, combine);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetReports(string schemaName, string[] reportNames, System.Guid[] devices, System.DateTime SD, System.DateTime ED, bool splitToTrips, AutoGRAPHService.ReportFormat format, bool compress, bool combine, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetReports(schemaName, reportNames, devices, SD, ED, splitToTrips, format, compress, combine, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.Collections.Generic.Dictionary<string, byte[]> EndGetReports(System.IAsyncResult result)
    {
        return base.Channel.EndGetReports(result);
    }
    
    private System.IAsyncResult OnBeginGetReports(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string schemaName = ((string)(inValues[0]));
        string[] reportNames = ((string[])(inValues[1]));
        System.Guid[] devices = ((System.Guid[])(inValues[2]));
        System.DateTime SD = ((System.DateTime)(inValues[3]));
        System.DateTime ED = ((System.DateTime)(inValues[4]));
        bool splitToTrips = ((bool)(inValues[5]));
        AutoGRAPHService.ReportFormat format = ((AutoGRAPHService.ReportFormat)(inValues[6]));
        bool compress = ((bool)(inValues[7]));
        bool combine = ((bool)(inValues[8]));
        return this.BeginGetReports(schemaName, reportNames, devices, SD, ED, splitToTrips, format, compress, combine, callback, asyncState);
    }
    
    private object[] OnEndGetReports(System.IAsyncResult result)
    {
        System.Collections.Generic.Dictionary<string, byte[]> retVal = this.EndGetReports(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetReportsCompleted(object state)
    {
        if ((this.GetReportsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetReportsCompleted(this, new GetReportsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetReportsAsync(string schemaName, string[] reportNames, System.Guid[] devices, System.DateTime SD, System.DateTime ED, bool splitToTrips, AutoGRAPHService.ReportFormat format, bool compress, bool combine)
    {
        this.GetReportsAsync(schemaName, reportNames, devices, SD, ED, splitToTrips, format, compress, combine, null);
    }
    
    public void GetReportsAsync(string schemaName, string[] reportNames, System.Guid[] devices, System.DateTime SD, System.DateTime ED, bool splitToTrips, AutoGRAPHService.ReportFormat format, bool compress, bool combine, object userState)
    {
        if ((this.onBeginGetReportsDelegate == null))
        {
            this.onBeginGetReportsDelegate = new BeginOperationDelegate(this.OnBeginGetReports);
        }
        if ((this.onEndGetReportsDelegate == null))
        {
            this.onEndGetReportsDelegate = new EndOperationDelegate(this.OnEndGetReports);
        }
        if ((this.onGetReportsCompletedDelegate == null))
        {
            this.onGetReportsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReportsCompleted);
        }
        base.InvokeAsync(this.onBeginGetReportsDelegate, new object[] {
                    schemaName,
                    reportNames,
                    devices,
                    SD,
                    ED,
                    splitToTrips,
                    format,
                    compress,
                    combine}, this.onEndGetReportsDelegate, this.onGetReportsCompletedDelegate, userState);
    }
    
    public System.Guid ExecuteReports(string schemaName, string[] reportNames, System.Guid[] devices, System.DateTime SD, System.DateTime ED, bool splitToTrips, AutoGRAPHService.ReportFormat format, bool compress, bool combine)
    {
        return base.Channel.ExecuteReports(schemaName, reportNames, devices, SD, ED, splitToTrips, format, compress, combine);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginExecuteReports(string schemaName, string[] reportNames, System.Guid[] devices, System.DateTime SD, System.DateTime ED, bool splitToTrips, AutoGRAPHService.ReportFormat format, bool compress, bool combine, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginExecuteReports(schemaName, reportNames, devices, SD, ED, splitToTrips, format, compress, combine, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.Guid EndExecuteReports(System.IAsyncResult result)
    {
        return base.Channel.EndExecuteReports(result);
    }
    
    private System.IAsyncResult OnBeginExecuteReports(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string schemaName = ((string)(inValues[0]));
        string[] reportNames = ((string[])(inValues[1]));
        System.Guid[] devices = ((System.Guid[])(inValues[2]));
        System.DateTime SD = ((System.DateTime)(inValues[3]));
        System.DateTime ED = ((System.DateTime)(inValues[4]));
        bool splitToTrips = ((bool)(inValues[5]));
        AutoGRAPHService.ReportFormat format = ((AutoGRAPHService.ReportFormat)(inValues[6]));
        bool compress = ((bool)(inValues[7]));
        bool combine = ((bool)(inValues[8]));
        return this.BeginExecuteReports(schemaName, reportNames, devices, SD, ED, splitToTrips, format, compress, combine, callback, asyncState);
    }
    
    private object[] OnEndExecuteReports(System.IAsyncResult result)
    {
        System.Guid retVal = this.EndExecuteReports(result);
        return new object[] {
                retVal};
    }
    
    private void OnExecuteReportsCompleted(object state)
    {
        if ((this.ExecuteReportsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.ExecuteReportsCompleted(this, new ExecuteReportsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void ExecuteReportsAsync(string schemaName, string[] reportNames, System.Guid[] devices, System.DateTime SD, System.DateTime ED, bool splitToTrips, AutoGRAPHService.ReportFormat format, bool compress, bool combine)
    {
        this.ExecuteReportsAsync(schemaName, reportNames, devices, SD, ED, splitToTrips, format, compress, combine, null);
    }
    
    public void ExecuteReportsAsync(string schemaName, string[] reportNames, System.Guid[] devices, System.DateTime SD, System.DateTime ED, bool splitToTrips, AutoGRAPHService.ReportFormat format, bool compress, bool combine, object userState)
    {
        if ((this.onBeginExecuteReportsDelegate == null))
        {
            this.onBeginExecuteReportsDelegate = new BeginOperationDelegate(this.OnBeginExecuteReports);
        }
        if ((this.onEndExecuteReportsDelegate == null))
        {
            this.onEndExecuteReportsDelegate = new EndOperationDelegate(this.OnEndExecuteReports);
        }
        if ((this.onExecuteReportsCompletedDelegate == null))
        {
            this.onExecuteReportsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteReportsCompleted);
        }
        base.InvokeAsync(this.onBeginExecuteReportsDelegate, new object[] {
                    schemaName,
                    reportNames,
                    devices,
                    SD,
                    ED,
                    splitToTrips,
                    format,
                    compress,
                    combine}, this.onEndExecuteReportsDelegate, this.onExecuteReportsCompletedDelegate, userState);
    }
    
    public AutoGRAPHService.ReportStatus GetReportsStatus(System.Guid statusToken)
    {
        return base.Channel.GetReportsStatus(statusToken);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetReportsStatus(System.Guid statusToken, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetReportsStatus(statusToken, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public AutoGRAPHService.ReportStatus EndGetReportsStatus(System.IAsyncResult result)
    {
        return base.Channel.EndGetReportsStatus(result);
    }
    
    private System.IAsyncResult OnBeginGetReportsStatus(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        System.Guid statusToken = ((System.Guid)(inValues[0]));
        return this.BeginGetReportsStatus(statusToken, callback, asyncState);
    }
    
    private object[] OnEndGetReportsStatus(System.IAsyncResult result)
    {
        AutoGRAPHService.ReportStatus retVal = this.EndGetReportsStatus(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetReportsStatusCompleted(object state)
    {
        if ((this.GetReportsStatusCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetReportsStatusCompleted(this, new GetReportsStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetReportsStatusAsync(System.Guid statusToken)
    {
        this.GetReportsStatusAsync(statusToken, null);
    }
    
    public void GetReportsStatusAsync(System.Guid statusToken, object userState)
    {
        if ((this.onBeginGetReportsStatusDelegate == null))
        {
            this.onBeginGetReportsStatusDelegate = new BeginOperationDelegate(this.OnBeginGetReportsStatus);
        }
        if ((this.onEndGetReportsStatusDelegate == null))
        {
            this.onEndGetReportsStatusDelegate = new EndOperationDelegate(this.OnEndGetReportsStatus);
        }
        if ((this.onGetReportsStatusCompletedDelegate == null))
        {
            this.onGetReportsStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReportsStatusCompleted);
        }
        base.InvokeAsync(this.onBeginGetReportsStatusDelegate, new object[] {
                    statusToken}, this.onEndGetReportsStatusDelegate, this.onGetReportsStatusCompletedDelegate, userState);
    }
    
    public System.Collections.Generic.Dictionary<string, byte[]> GetReportsResult(System.Guid statusToken)
    {
        return base.Channel.GetReportsResult(statusToken);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetReportsResult(System.Guid statusToken, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetReportsResult(statusToken, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.Collections.Generic.Dictionary<string, byte[]> EndGetReportsResult(System.IAsyncResult result)
    {
        return base.Channel.EndGetReportsResult(result);
    }
    
    private System.IAsyncResult OnBeginGetReportsResult(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        System.Guid statusToken = ((System.Guid)(inValues[0]));
        return this.BeginGetReportsResult(statusToken, callback, asyncState);
    }
    
    private object[] OnEndGetReportsResult(System.IAsyncResult result)
    {
        System.Collections.Generic.Dictionary<string, byte[]> retVal = this.EndGetReportsResult(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetReportsResultCompleted(object state)
    {
        if ((this.GetReportsResultCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetReportsResultCompleted(this, new GetReportsResultCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetReportsResultAsync(System.Guid statusToken)
    {
        this.GetReportsResultAsync(statusToken, null);
    }
    
    public void GetReportsResultAsync(System.Guid statusToken, object userState)
    {
        if ((this.onBeginGetReportsResultDelegate == null))
        {
            this.onBeginGetReportsResultDelegate = new BeginOperationDelegate(this.OnBeginGetReportsResult);
        }
        if ((this.onEndGetReportsResultDelegate == null))
        {
            this.onEndGetReportsResultDelegate = new EndOperationDelegate(this.OnEndGetReportsResult);
        }
        if ((this.onGetReportsResultCompletedDelegate == null))
        {
            this.onGetReportsResultCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReportsResultCompleted);
        }
        base.InvokeAsync(this.onBeginGetReportsResultDelegate, new object[] {
                    statusToken}, this.onEndGetReportsResultDelegate, this.onGetReportsResultCompletedDelegate, userState);
    }
    
    public void CancelReports(System.Guid statusToken)
    {
        base.Channel.CancelReports(statusToken);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginCancelReports(System.Guid statusToken, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginCancelReports(statusToken, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public void EndCancelReports(System.IAsyncResult result)
    {
        base.Channel.EndCancelReports(result);
    }
    
    private System.IAsyncResult OnBeginCancelReports(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        System.Guid statusToken = ((System.Guid)(inValues[0]));
        return this.BeginCancelReports(statusToken, callback, asyncState);
    }
    
    private object[] OnEndCancelReports(System.IAsyncResult result)
    {
        this.EndCancelReports(result);
        return null;
    }
    
    private void OnCancelReportsCompleted(object state)
    {
        if ((this.CancelReportsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CancelReportsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CancelReportsAsync(System.Guid statusToken)
    {
        this.CancelReportsAsync(statusToken, null);
    }
    
    public void CancelReportsAsync(System.Guid statusToken, object userState)
    {
        if ((this.onBeginCancelReportsDelegate == null))
        {
            this.onBeginCancelReportsDelegate = new BeginOperationDelegate(this.OnBeginCancelReports);
        }
        if ((this.onEndCancelReportsDelegate == null))
        {
            this.onEndCancelReportsDelegate = new EndOperationDelegate(this.OnEndCancelReports);
        }
        if ((this.onCancelReportsCompletedDelegate == null))
        {
            this.onCancelReportsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelReportsCompleted);
        }
        base.InvokeAsync(this.onBeginCancelReportsDelegate, new object[] {
                    statusToken}, this.onEndCancelReportsDelegate, this.onCancelReportsCompletedDelegate, userState);
    }
    
    public System.Collections.Generic.Dictionary<string, AutoGRAPHService.TachoCardItems> GetCardRecords(System.DateTime SD, System.DateTime ED, string[] cardID)
    {
        return base.Channel.GetCardRecords(SD, ED, cardID);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetCardRecords(System.DateTime SD, System.DateTime ED, string[] cardID, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetCardRecords(SD, ED, cardID, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.Collections.Generic.Dictionary<string, AutoGRAPHService.TachoCardItems> EndGetCardRecords(System.IAsyncResult result)
    {
        return base.Channel.EndGetCardRecords(result);
    }
    
    private System.IAsyncResult OnBeginGetCardRecords(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        System.DateTime SD = ((System.DateTime)(inValues[0]));
        System.DateTime ED = ((System.DateTime)(inValues[1]));
        string[] cardID = ((string[])(inValues[2]));
        return this.BeginGetCardRecords(SD, ED, cardID, callback, asyncState);
    }
    
    private object[] OnEndGetCardRecords(System.IAsyncResult result)
    {
        System.Collections.Generic.Dictionary<string, AutoGRAPHService.TachoCardItems> retVal = this.EndGetCardRecords(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetCardRecordsCompleted(object state)
    {
        if ((this.GetCardRecordsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetCardRecordsCompleted(this, new GetCardRecordsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetCardRecordsAsync(System.DateTime SD, System.DateTime ED, string[] cardID)
    {
        this.GetCardRecordsAsync(SD, ED, cardID, null);
    }
    
    public void GetCardRecordsAsync(System.DateTime SD, System.DateTime ED, string[] cardID, object userState)
    {
        if ((this.onBeginGetCardRecordsDelegate == null))
        {
            this.onBeginGetCardRecordsDelegate = new BeginOperationDelegate(this.OnBeginGetCardRecords);
        }
        if ((this.onEndGetCardRecordsDelegate == null))
        {
            this.onEndGetCardRecordsDelegate = new EndOperationDelegate(this.OnEndGetCardRecords);
        }
        if ((this.onGetCardRecordsCompletedDelegate == null))
        {
            this.onGetCardRecordsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCardRecordsCompleted);
        }
        base.InvokeAsync(this.onBeginGetCardRecordsDelegate, new object[] {
                    SD,
                    ED,
                    cardID}, this.onEndGetCardRecordsDelegate, this.onGetCardRecordsCompletedDelegate, userState);
    }
    
    public AutoGRAPHService.TachoCardItem[] GetCardStatistic(string[] cardIDs)
    {
        return base.Channel.GetCardStatistic(cardIDs);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetCardStatistic(string[] cardIDs, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetCardStatistic(cardIDs, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public AutoGRAPHService.TachoCardItem[] EndGetCardStatistic(System.IAsyncResult result)
    {
        return base.Channel.EndGetCardStatistic(result);
    }
    
    private System.IAsyncResult OnBeginGetCardStatistic(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string[] cardIDs = ((string[])(inValues[0]));
        return this.BeginGetCardStatistic(cardIDs, callback, asyncState);
    }
    
    private object[] OnEndGetCardStatistic(System.IAsyncResult result)
    {
        AutoGRAPHService.TachoCardItem[] retVal = this.EndGetCardStatistic(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetCardStatisticCompleted(object state)
    {
        if ((this.GetCardStatisticCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetCardStatisticCompleted(this, new GetCardStatisticCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetCardStatisticAsync(string[] cardIDs)
    {
        this.GetCardStatisticAsync(cardIDs, null);
    }
    
    public void GetCardStatisticAsync(string[] cardIDs, object userState)
    {
        if ((this.onBeginGetCardStatisticDelegate == null))
        {
            this.onBeginGetCardStatisticDelegate = new BeginOperationDelegate(this.OnBeginGetCardStatistic);
        }
        if ((this.onEndGetCardStatisticDelegate == null))
        {
            this.onEndGetCardStatisticDelegate = new EndOperationDelegate(this.OnEndGetCardStatistic);
        }
        if ((this.onGetCardStatisticCompletedDelegate == null))
        {
            this.onGetCardStatisticCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCardStatisticCompleted);
        }
        base.InvokeAsync(this.onBeginGetCardStatisticDelegate, new object[] {
                    cardIDs}, this.onEndGetCardStatisticDelegate, this.onGetCardStatisticCompletedDelegate, userState);
    }
    
    public AutoGRAPHService.TachoCardItem[] GetCardStatisticAll()
    {
        return base.Channel.GetCardStatisticAll();
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetCardStatisticAll(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetCardStatisticAll(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public AutoGRAPHService.TachoCardItem[] EndGetCardStatisticAll(System.IAsyncResult result)
    {
        return base.Channel.EndGetCardStatisticAll(result);
    }
    
    private System.IAsyncResult OnBeginGetCardStatisticAll(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginGetCardStatisticAll(callback, asyncState);
    }
    
    private object[] OnEndGetCardStatisticAll(System.IAsyncResult result)
    {
        AutoGRAPHService.TachoCardItem[] retVal = this.EndGetCardStatisticAll(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetCardStatisticAllCompleted(object state)
    {
        if ((this.GetCardStatisticAllCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetCardStatisticAllCompleted(this, new GetCardStatisticAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetCardStatisticAllAsync()
    {
        this.GetCardStatisticAllAsync(null);
    }
    
    public void GetCardStatisticAllAsync(object userState)
    {
        if ((this.onBeginGetCardStatisticAllDelegate == null))
        {
            this.onBeginGetCardStatisticAllDelegate = new BeginOperationDelegate(this.OnBeginGetCardStatisticAll);
        }
        if ((this.onEndGetCardStatisticAllDelegate == null))
        {
            this.onEndGetCardStatisticAllDelegate = new EndOperationDelegate(this.OnEndGetCardStatisticAll);
        }
        if ((this.onGetCardStatisticAllCompletedDelegate == null))
        {
            this.onGetCardStatisticAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCardStatisticAllCompleted);
        }
        base.InvokeAsync(this.onBeginGetCardStatisticAllDelegate, null, this.onEndGetCardStatisticAllDelegate, this.onGetCardStatisticAllCompletedDelegate, userState);
    }
}
